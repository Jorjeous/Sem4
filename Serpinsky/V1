


#include <SFML/Audio.hpp>
#include <iostream>
#include <SFML/Graphics.hpp>
#include <vector>
#include <math.h>




const int SIZE = 2000;
const int SPEED = 6400;
const int CIRCLE_RADIUS = 5;

const sf::Color CIRCLE_COLOR = sf::Color(255, 255, 255);

sf::Vector2f point1 = { 300, 300 };
sf::Vector2f point2 = { 800, 2000 };
sf::Vector2f point3 = { 2000, 200 };


/*void DrwTrinl(int* i, sf::Vector2f *p1, sf::Vector2f *p2, sf::Vector2f *p3, sf::Vertex points)
{
	int j = *i;
	points[j].position = sf::Vector2f(p1->x, p1->y);
	points[j].color = sf::Color(rand() % 256, rand() % 256, rand() % 256);
	points[(j)+1].position = sf::Vector2f(p2->x, p2->y);
	points[j+1].color = sf::Color(rand() % 256, rand() % 256, rand() % 256);
	points[j+2].position = sf::Vector2f(p3->x, p3->y);
	points[j+2].color = sf::Color(rand() % 256, rand() % 256, rand() % 256);


}*/


int main() {
	sf::RenderWindow window(sf::VideoMode(SIZE, SIZE), "Sierpinsk");
	window.setFramerateLimit(SPEED);

	sf::Vector2i actualPoint = { SIZE , SIZE  };
	window.clear(sf::Color::Black);
	

	sf::Vertex points;
	int i = 0;




	while (window.isOpen()) {
		sf::Event e;
		while (window.pollEvent(e)) {
			if (e.type == sf::Event::Closed) window.close();
		}


		sf::CircleShape circle;

	
		circle.setRadius(CIRCLE_RADIUS);
		int i = 0;
		circle.setFillColor(sf::Color( rand() % 256, rand() % 256,  rand() % 256, 500));
		



		int RandomPoint = rand() % 3;

	

		if (RandomPoint == 0) {
			actualPoint.x = (actualPoint.x + point1.x) / 2;
			actualPoint.y = (actualPoint.y + point1.y) / 2;
		}
		if (RandomPoint == 1) {
			actualPoint.x = (actualPoint.x + point2.x) / 2;
			actualPoint.y = (actualPoint.y + point2.y) / 2;
		}
		if (RandomPoint == 2) {
			actualPoint.x = (actualPoint.x + point3.x) / 2;
			actualPoint.y = (actualPoint.y + point3.y) / 2;
		}
		
		circle.setPosition(actualPoint.x, actualPoint.y);
		
		window.draw(circle);
		//DrwTrinl(point1, point2, point3, window);
		window.display();
		window.display();
	}
	return 0;
}

